// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package v1 generated by go-bindata.// sources:
// pkg/api/v1/service.swagger.json
package v1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _serviceSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdf\x73\xdb\xb6\x93\x7f\xf7\x5f\xb1\xa3\xde\xcc\xa5\x37\xaa\xdc\xe4\xfb\x9d\x9b\x3b\x77\xfa\xe0\x26\x6e\xe3\x9b\xc4\xf6\x38\x4e\xfa\x50\x65\x6c\x88\x5c\x4a\x68\x28\x40\x05\x40\x39\x6a\xc6\xff\xfb\xcd\x02\x20\x09\x52\x94\xf5\xc3\xb2\x23\xa5\xd4\x43\x22\x93\xe0\x62\x77\xb1\xbb\x9f\x0f\x40\x90\xfa\x72\x00\xd0\xd1\xb7\x6c\x38\x44\xd5\x39\x82\xce\x8b\xde\x8f\x9d\x2e\x1d\xe3\x22\x91\x9d\x23\xa0\xf3\x00\x1d\xc3\x4d\x8a\x74\x7e\xf2\x69\x78\xc8\x26\xfc\x70\xfa\xfc\x50\xa3\x9a\xf2\x08\x7b\x13\x25\x8d\xb4\x17\x01\x74\xa6\xa8\x34\x97\x82\x9a\xfa\xaf\x20\xa4\x01\x8d\xa6\x73\x00\x70\x67\x45\x47\x52\xe8\x6c\x8c\xba\x73\x04\x7f\xb8\xab\xd8\x64\x92\xf2\x88\x19\x2e\xc5\xe1\x9f\x5a\x0a\x6a\xfb\xd1\xb6\x9d\x28\x19\x67\xd1\x8a\x6d\x99\x19\xe9\x52\x67\xd2\x91\x54\x95\x83\x3f\x31\x32\xd7\x66\x36\xc1\xf2\x2c\x40\x67\x88\x26\xf8\x13\xa0\x23\x27\xa8\xac\xdc\xd3\x98\xf4\x3f\xb7\xd7\x5d\xd1\x65\xd7\x6f\xb8\x36\xde\x44\xdb\x54\xa1\x9e\x48\xa1\x2b\x02\xed\x89\x17\x3f\xfe\x58\x3b\x04\xd0\x89\x51\x47\x8a\x4f\x8c\x77\xcc\x31\xe8\x2c\x8a\x50\xeb\x24\x4b\x21\x97\xd4\x0b\xc4\xdb\x8b\x74\x34\xc2\x31\x9b\x13\x06\xd0\xf9\x0f\x85\x09\xc9\xf9\xee\x30\xc6\x84\x0b\x4e\x72\xf5\xe1\xf4\x39\x29\x19\x28\x7d\xe9\x25\x77\x2a\xd7\xdf\x05\x7f\xdd\x85\x5d\x76\x62\x4c\x58\x96\x9a\xe5\xea\x0b\xc8\x04\x7e\x9e\x60\x64\x30\x06\x54\x4a\xaa\xc2\x8a\x87\x1a\xa1\x32\x61\xf8\x18\x4f\x48\xe8\x3d\x7a\x1f\x34\x58\xd0\x99\x30\xc5\xc6\x68\x50\x95\xc1\xe2\x3e\x35\x73\x04\x1b\xdb\x50\xd6\x23\x79\x7b\x1d\x63\x8a\x06\xe3\xba\xde\xdc\x5a\xfa\x57\x86\x6a\x56\x3f\xa5\xf0\xaf\x8c\x2b\xa4\x10\x49\x58\xaa\xb1\x76\x9a\xc2\x8c\xae\x1d\x48\x99\x22\x13\xf5\xab\x13\xa9\xc6\xcc\x84\x0d\x16\x8d\xc7\x02\xad\x29\x79\xb8\x36\x28\xcc\x8e\xe8\x5c\x7c\xff\x18\x8c\x85\x61\xc3\xfa\x28\x84\xf9\x54\x0a\xf8\x78\x50\x33\xbd\x33\x91\x7a\xf5\xbc\x7c\xa9\x90\x19\xdc\xf9\xcc\x2c\x55\x6e\x93\xb1\x39\xac\x07\x32\x9e\x8b\x5a\x17\xd0\x4d\x67\x82\x78\x36\x2a\xab\x87\xf3\x23\x8d\xcf\xd6\x03\x3d\x5b\x3d\xce\xdf\x4f\xe2\x36\xce\xdb\x38\x7f\xe8\xf8\xb8\x30\x2a\x47\xe9\x12\xff\xca\x50\x9b\xc7\x0f\xfa\x83\xc0\x6f\x8d\xc4\xec\xf0\x0b\x79\xe8\x6e\x53\x7e\xf6\x1b\xee\x3e\x3d\x6b\x93\xa3\xf8\x2c\x48\x0e\xfb\x7f\x63\x72\x10\xb5\x5f\x2f\x39\x72\x4e\xa3\x8d\xe2\x62\xf8\xa8\x8c\xc5\x71\xc8\x95\x63\xf5\x95\x6b\xde\x86\x6b\x1b\xae\xe5\xd9\xc7\x0f\xd7\x7b\x4a\x70\x65\x5a\xbc\x22\xff\xde\x33\xee\xdd\xc6\xf0\x2e\xf2\x91\xa5\x63\xb3\x66\xec\x6f\x81\x6f\xef\x19\xd7\x6e\xe3\x7a\x77\xe3\xda\x05\xd2\xd6\x39\xf6\xba\xc5\xfd\xf0\x4b\xa2\xe4\xb8\x47\x08\x73\xe7\xbf\x5b\xae\x7d\xa8\x30\x65\x4e\xe3\x2f\xf9\xd7\xbb\xc3\x2f\x46\xe6\x4d\x8d\xec\xad\x4d\xca\x2f\x73\x99\x7b\x41\xc9\x73\x6d\xdb\x2c\x6a\xce\xa2\x22\x70\x9e\x80\xe6\xac\xb0\xf6\x59\xc4\xee\x6e\xa8\x93\x27\xcd\x6e\x68\xe3\xf3\x76\x67\x94\xd9\x9d\x71\x8a\x2c\x51\xbd\xa6\xac\xd9\xfe\x9a\xb9\x57\x69\xe1\x92\x39\x41\xc0\x0f\xb6\xeb\x35\xb5\xce\x2c\x7a\xec\x9b\xd6\x6e\x2e\xbc\x53\x5a\xaf\x0c\xaf\x05\x76\x3d\x70\xb2\x5f\x62\xe0\x9e\x4c\xf5\x5b\x18\xf4\x9f\x16\x06\x5b\x18\x6c\x61\x70\x91\x46\x2d\x0c\xae\xac\xf5\x37\x0f\x83\x4b\x57\x09\x4b\x10\xdc\x93\x75\xc2\x16\x04\xfd\xa7\x05\xc1\x16\x04\xbf\x59\x10\xfc\xba\xeb\x82\x2b\xd4\x98\xad\x94\xe9\x03\xb8\x6f\x39\x30\x8f\xd5\x5e\xb8\x2e\x58\x3d\xb8\x70\x81\xb0\x17\xac\x14\x16\xc7\xca\x25\xc3\xf0\xd0\xdc\xda\xe1\xb2\x05\xf8\x12\x32\xf6\x64\x09\xbe\x85\x0c\xff\x59\x52\x14\x7b\x3b\x86\x1d\xf3\xb1\xbe\x63\x7a\xed\x16\x9a\xd4\xf3\x7c\xf7\xb4\xda\x9d\x21\xdc\x85\xfd\x5d\x79\x59\xda\xe2\x9d\xa7\xcd\xc1\xc6\x02\xc3\xfa\xdb\xba\xf6\x6e\xcb\x7d\xbb\xdb\xde\x7f\x16\xb1\xc0\x9d\x29\x1c\x53\x8e\xb7\x4f\x35\x29\x47\x91\x8d\x6b\xfe\xb1\xc7\x7f\x39\x7e\x77\xfa\xb2\xd6\x18\xa0\x73\x76\x7e\xf9\xf6\xf8\xcd\xfc\xf1\xcb\xd3\x97\xaf\xab\x03\xf4\xb1\x5b\x8f\x9a\x3c\x9c\xbc\xec\x35\x9d\xd2\x68\xfa\xd6\xbc\xb2\xa6\x32\x13\x36\xc4\x6b\x23\x3f\xe1\x02\x00\xfc\x4a\x1a\x69\xfe\xf7\x23\xac\xe6\x70\x61\x70\x88\x6a\xf1\x72\x0e\x17\xe6\x5f\x2f\xd6\x55\x78\x07\x1f\x6e\x59\x19\x6c\x36\xdd\xe6\xe0\xe6\x20\xff\x75\x78\xcb\x4c\x34\xda\x04\x72\x7e\xb7\x17\x3e\x2e\xe6\x3c\xd3\x46\x21\x1b\x73\x31\x2c\x8e\xe9\xef\x57\x2f\xe4\xf9\x08\x38\xa3\xe7\x2b\xc5\x44\x91\x6d\x86\xcf\xa9\x5c\x5a\xd4\x84\x3a\xfe\xec\xfd\xfb\x59\x4e\xa6\x28\x6a\x6c\x02\xea\xe1\xe8\x05\x59\x9c\x5a\xaf\x17\x0f\x46\xef\xac\x7b\x1a\x20\x09\x6a\xb0\xd4\xd8\x75\xf9\xa0\xa2\x93\x03\xce\x5e\x90\x09\xdc\x63\x45\x8b\xd2\x2d\x4a\xb7\x28\xdd\xa2\x74\x8b\xd2\x4f\x86\xd2\x9b\x3e\xee\xb3\x1f\xfb\x0a\xdb\xbd\xb9\xf6\xb3\xf3\x20\xb3\x3b\xeb\x46\xff\x3c\xb8\xdb\x42\xa1\xc9\x2f\x5c\xfd\x09\xac\xbd\xd9\x92\xd5\x56\x10\xfb\x69\x2b\x48\xcd\x6b\x4f\x81\xca\xe5\x7d\xbf\x4d\xf0\xb9\x5c\x2a\xde\xf5\x1c\x7b\xc3\xb5\x29\xd7\xca\xdb\xe5\x5b\xfb\x69\x33\x6e\x65\x4d\x5a\xcc\x86\x2d\x95\xa1\xbc\xe0\xac\xff\x92\xa6\x3c\x7f\xf7\xec\x35\x4d\x15\xb5\xdb\xda\xe3\x3f\xfb\x33\x4b\x5e\xa1\x3a\xec\xef\x8b\x9a\x2a\xc1\xb9\x95\x4d\xa0\x7b\xf5\xb2\xa6\x50\xe9\x36\x25\x9b\x83\x7b\x37\xb6\xd1\x6d\xeb\x85\x4d\xab\x07\xfc\x8a\x3b\xd8\xf6\xea\xa5\x4d\x6d\xbc\xef\x7a\xbc\x57\xb7\xf5\x6c\xf9\xc5\x4d\xcb\x82\x7f\x05\xc2\xb6\xc1\x6a\x6e\x35\x53\xf6\x61\x4d\xb7\x4d\x93\xe5\x69\xb2\x3b\x73\xb3\x44\xc9\xf1\xae\xdc\x96\x2a\xde\x8e\xfb\xd5\x35\x09\xc3\x6e\x47\x54\x6a\x9f\x4a\x7b\x3a\xad\xbf\x85\xa7\xd2\xb6\xf1\x36\xb6\x2a\xf8\xec\xc9\x1d\x81\x16\x7f\x5a\xfc\x69\xf1\xa7\xc5\x9f\x16\x7f\x76\x12\x7f\x0e\xe0\x9e\x69\x92\x7f\x07\x97\x7d\xa7\x56\xf0\x94\xdc\x86\x6f\xd6\xda\xbb\x55\xee\x76\x81\xdb\x7f\xd6\x06\x8b\xa7\x7f\x56\x77\x37\xf4\x78\xc2\x07\xe0\xd6\xae\x00\x5b\xcb\xfe\xf5\x37\xaa\x97\x35\xa0\xdd\xaa\xbe\x84\x26\xef\xfb\x66\xf5\x7b\xec\x68\x0b\x67\x5b\x38\x77\xa0\x70\xae\xa0\xcd\xd3\xed\x57\xdf\x62\x15\x2f\x7e\xa7\x2a\x88\xea\x22\xfc\x3b\xf6\xd7\xae\x06\x59\x72\x2c\x66\x61\xe5\x5e\x50\xec\x16\x15\x39\xdb\xfe\x3a\x53\x69\xbd\x5a\x2f\x32\x31\xcc\x92\x29\x4b\x33\x5c\x72\x61\xa5\x2c\x04\xf7\x85\x67\x26\x60\x61\x77\x8d\xf0\x95\x5b\xf8\x2b\xc7\x34\x7e\xcb\xf4\xa7\x87\xd8\x59\xfd\x4d\xae\x9a\x10\xa6\x14\xab\xc6\x40\x87\x1b\x1c\xcf\xe3\xc1\xaa\x61\x58\xaf\x73\x57\x23\x04\x8d\xb6\xa2\x26\x64\x0d\x8c\x99\xfe\x04\x56\xa7\x5e\x83\x1b\x82\x35\xa4\x8a\x18\x7b\xc1\x11\xf4\x3b\x49\x8f\xf5\x3b\x7d\x41\x6d\x82\x63\x83\x5e\x4c\x47\xfb\xe2\x35\x2a\x84\x9b\xe4\x06\x14\x4e\x14\x6a\x14\x46\x03\xf3\x3d\x73\x01\x5a\x8e\x11\x94\x94\x06\xc6\xa8\x35\x1b\x62\x17\x6e\xd8\x0d\x30\x11\xc3\xcd\xe0\xa6\x2f\x6c\x43\x4d\x2d\xcd\x08\xf3\x36\x90\xc8\x4c\xd8\xcb\x6f\x92\x9b\xae\x6b\x1c\xdf\x14\x62\x8b\xb3\x66\x84\x7d\x91\x5f\x63\x5b\xf7\x06\x37\x3d\xd2\xea\xd7\xc2\x72\x0d\x4c\x21\x64\x1a\x63\x30\x12\xf4\x04\x23\x9e\xcc\x80\x81\xce\x06\xa1\x97\x34\x98\x11\x33\xa0\x47\x32\x4b\x63\x18\x60\x5f\x28\x34\x99\x12\x18\xc3\x80\x9a\x0f\xa9\x6d\x4e\x4c\x40\x2a\x18\xcb\x98\x27\xdc\x9f\x16\xe0\x26\xa7\x65\x93\x5e\x4d\x87\x54\x4b\x18\xb1\x29\x02\x83\x28\xd3\x46\x8e\xe1\xff\xde\x9d\x9f\x01\x8a\x48\xc6\x44\x36\x9e\x69\x44\x18\x60\x2a\x6f\xbf\xb7\x06\x7c\x07\xee\xf2\xb7\xf6\x72\x2e\xe0\x42\x49\x8a\x3e\x4a\x4c\x3a\xff\xfb\x08\x85\xb3\xca\xbb\x2e\x92\xc2\xe0\x67\x6b\x10\x83\x49\xd1\xb8\x0b\xac\x40\xb9\xc2\xbd\x52\xf5\x85\xce\x06\x3f\x14\xae\xd3\x90\xf0\xd4\xa0\x72\xe6\x90\xb8\xe3\x8b\x53\xf2\x97\x14\xe9\xcc\x8a\x66\xb6\x1b\xa9\x31\x77\x17\xd3\x7d\xe1\xbc\xc9\x4b\x25\xc8\xd8\x1e\xfc\x2a\x15\xe0\x67\x36\x9e\xa4\xd8\x05\x9e\x14\x67\xf2\x56\x13\x85\x53\x2e\x33\xdd\x17\xbe\x15\x29\x60\x7f\xe2\xce\x0d\x52\x83\xc6\x4c\x43\x22\xd3\x54\xde\xea\x23\xb2\x9e\x82\x31\x81\x2f\xee\x0b\x00\x83\x23\x78\xf1\x22\xff\x6b\x50\x9e\x00\x88\xe1\x08\x9e\x97\x7f\x7e\xa6\x96\xf9\x9f\x77\xf9\x97\x19\x35\xfa\x97\xfb\xcb\x1f\xfc\xfb\x08\xfe\x87\x7a\xa2\x6c\xf2\x14\xe5\x96\xa7\xa9\xfd\x61\xbf\xdc\x1f\xde\xfc\x08\x6c\x71\x22\x0d\x55\xee\x9d\xcf\xdd\x99\x0d\xdb\xbf\xfb\xe2\x99\x19\x21\x57\xae\x8d\x93\x31\x70\x09\x6a\xa4\xf5\x86\xe7\x2f\x2e\xcc\xe5\x98\x1b\xe3\xfc\x69\x4b\x12\xd0\x98\xf6\x85\xcc\xcc\x24\x33\xdf\x5b\xdb\x37\xb6\xfe\xae\x30\xb0\x2f\x8e\x29\x5d\x91\x51\x57\x3e\x55\xb5\x35\x8d\x91\x8f\x89\x1e\x7d\x8e\x70\x62\x80\x19\xab\x62\xca\xb4\x81\x89\xd4\xdc\x05\x7f\x02\xac\x2f\x6c\x2d\x00\x57\x9b\x6c\xc4\x9e\x52\xe0\x15\xf5\x13\x5c\xb1\xcc\xe5\xfa\xd2\x40\x76\xd5\x72\xa9\xeb\xb2\xb8\xcc\x2d\x17\x08\xda\x06\x42\x9a\xe6\x0e\x7d\xc6\x34\x85\x52\xa5\x87\x24\x68\xd0\x17\x23\x46\x79\x8b\xc5\xb0\x60\xec\x32\xe9\x4c\x1a\x74\xc9\xcd\xc2\x82\x18\x4b\x74\xaa\x09\xa4\x49\x00\x53\x3c\x9d\xd9\xbe\x67\x7e\x60\xfa\xc2\xc8\xc9\x0f\x29\x4e\x31\x9d\x8b\xc7\x1e\x9c\x0a\x88\x98\x46\x97\x6e\x97\x27\xef\xae\x1a\xad\x0a\xfa\xcb\xcd\x8a\xb9\xc2\xc8\x14\xbd\x14\xa2\xbb\x30\xc8\xac\x7f\xaa\x62\xfb\x22\xe5\xba\x2e\x38\xcf\x26\x6d\x90\xc5\xa1\xc3\x90\x45\x23\xe0\x22\xe6\x53\x1e\x67\x2c\xcd\xd5\xed\x0b\x9f\x79\x45\x4d\x53\xa8\x65\xa6\x22\x04\x92\xde\x64\x8d\x2f\x52\x63\x34\x23\x19\x77\xfb\x42\x9a\x11\x2a\x08\xd8\x01\x8c\xd9\x8c\x22\x99\x6a\x50\x0f\x7e\x1f\x11\x0c\x14\xaa\xe5\x2a\xf9\x70\xef\x8b\x28\x45\xa6\xd2\x19\xc4\x32\xca\xc6\x28\x8c\x4d\xf4\x21\x5a\xa1\xb7\xdc\x8c\x80\x1b\x0d\x31\x46\x29\xf3\x51\xe0\x15\x3e\xbe\x38\xed\x01\x9c\x8a\xbe\x60\x62\x66\x75\x74\x0e\xc0\x24\xa1\xe8\x92\x0b\xcc\x3a\xcc\xbf\x68\x0a\xc0\x9c\x61\xf5\xc5\x00\x47\x6c\xca\x29\x4d\xa5\x22\xd9\xba\xb9\xd6\xba\xbd\x07\x70\x9e\x3b\x5d\xbb\x94\x09\x46\x93\xcf\x57\x7c\x5d\x04\x9e\x86\xdb\x11\x8f\x46\x79\xe8\xca\xc4\x87\x13\x53\x43\x34\xa1\xf3\x09\x99\x86\x92\xca\xbf\x91\xd6\x97\x56\x64\xdc\x83\x2b\x5f\x81\x2b\xca\x17\xe5\x78\xc4\xc4\xd0\x39\xdb\x17\x1e\xd7\x43\x59\x99\xa1\xb1\x30\x93\x0f\x63\x48\x91\x50\x88\x8e\xd9\x21\xd5\x90\x09\x23\xb3\x68\x44\xdd\xda\x14\x2e\xb4\xe3\x1a\x26\x4c\xe7\x10\x23\xfb\xc2\x31\x84\x81\xbb\xda\xeb\xea\x55\xe8\x16\xa0\xc1\x87\x42\x2a\x8a\xc6\x8a\x7a\x2c\x4d\x0b\xac\x77\x25\x74\x1a\xa2\x8d\xc5\x8d\xa2\x88\xcc\x97\xa6\xd2\x1e\x1a\xb8\x06\xb8\xed\x82\xc0\xdb\xbc\x3f\x8a\x3a\x1a\x6b\x0a\x43\x14\xb1\x03\x15\x1b\x35\x9f\xb9\x36\x6e\x6a\x5f\xed\xc1\x39\xc9\x0d\x50\xe1\x80\x1e\x14\xa5\xa3\x2f\x9a\xb4\xb2\xa3\x91\x57\x4c\x2f\x63\xbe\x54\xc2\x8d\x2d\x95\x37\x73\xb5\xb2\x86\xc0\x73\x63\x36\x27\xaa\x18\x63\x17\x83\xce\x15\x7d\x31\xef\x0b\x43\xe4\xa0\x70\x48\x01\x3a\x63\x54\x43\x2b\xbe\xee\x8e\x40\x93\xa2\x54\xd4\x9d\x61\x59\x55\x08\xec\x43\x3e\xc5\x4a\x53\x2f\xa1\x09\xa0\xab\xa0\x54\x45\xe4\x26\x40\x8e\x8e\xe0\x8f\xe7\x1f\x43\xbc\x12\x71\x30\xec\xeb\xf4\xf4\x63\xa3\xf0\x17\xa1\x70\xeb\x2e\x3e\xe7\x5f\xee\xb9\x86\x67\xbd\x7f\x58\xda\xdb\xef\x74\x2d\xff\x8d\xfa\x9d\x8f\xc5\xb5\xa6\x46\x12\x06\x6b\xaa\x76\x9f\x17\xba\xf0\xa2\xea\x08\xe0\xe4\x7f\x2a\xa2\xae\x52\x52\x1d\x9e\x28\x39\xe5\x31\xc5\x80\xab\x44\x54\x2a\xa6\xa8\x14\x1d\x33\x23\xae\x73\x92\x01\x61\x01\x24\x8a\xeb\x43\x9a\x0a\x43\xc1\xbd\x6d\x96\xba\x30\x25\xa6\x1b\xa3\x22\x79\x04\xe0\x05\x84\xfe\xa7\xf6\xa1\x55\xe7\x30\x81\x0b\x33\x6d\x6c\x12\x06\x15\xc8\xf6\x33\x4f\x7d\xbc\xac\x82\x1d\x5a\x5b\xe2\x30\xf4\x5e\xa3\x88\x88\x4b\xce\xeb\x53\x32\x04\x19\x16\xaf\x6e\xe1\x12\x96\xf7\x42\x91\xad\x0d\x13\x11\xe6\xb9\x54\xd6\x61\xaf\x56\x20\x2d\xd0\xba\x4b\x74\x3f\x96\x7d\xe1\x88\x4c\x2e\xd6\x19\x44\xae\x75\x55\x31\x76\xf4\xbd\xcc\xef\x4a\x28\x55\x58\x90\xcc\x23\xd9\x39\xac\x89\xfb\xf4\x45\x13\xf9\x09\x44\x56\xd8\x0f\x8c\x98\x6e\x20\x3f\x25\xf5\x29\x99\xb7\x46\xef\x01\xb7\xc6\x05\x38\x95\x69\x96\x97\x0d\xee\x60\x7d\x8c\x4c\xf8\xba\x57\x4c\x8e\x10\xa2\x94\x93\xf2\x05\x71\xfa\x24\xe4\xad\x75\x1d\x75\x4e\x58\x82\x89\x54\x68\x4f\x25\x3c\x4d\x7d\xa5\xb1\x29\x62\x51\x0c\x75\x91\x1e\x7e\xf4\x5c\x18\x70\x95\x0f\x91\x45\x20\xab\x05\x27\x5c\xba\x65\x44\x14\x4a\xd4\xa6\xb9\x4c\xc1\xb9\xfd\x2f\x71\x5b\x7d\x3d\x46\xd2\xdc\xca\xe9\x68\xb9\xe3\x2d\x9b\xe5\x55\x75\x46\x05\xbc\x74\x9e\x8d\x8e\x38\x8b\xa8\xf6\x31\xe1\xd7\x02\x79\x42\xaa\xdb\xe1\x3b\xd6\x8e\x94\x54\x28\x9d\xc7\xb8\x54\x46\x2c\x2c\xc8\x45\x10\x59\xcc\x2f\x41\x52\x37\xa0\x24\x14\x34\xcc\x79\x23\x4f\xb9\x18\x09\xa7\xb4\xa7\x33\x21\x19\xfe\xc4\x45\x6c\xe9\x59\x33\xfd\x69\xa8\x59\x94\xd5\x8e\x31\x78\x52\x31\x92\x04\xc8\xe1\xc4\xce\x91\x9e\xef\xe0\xa5\x14\x9a\xc7\x05\x7d\x21\x3c\x79\x7d\x75\x75\xe1\x79\xa7\x9b\xfb\xd8\x03\xa4\x85\x0d\xb8\x79\xe0\xf5\x54\x27\xd3\xa8\xab\xf1\x59\xe4\xbf\x1f\xe8\x8b\xe3\xab\x97\xaf\x0b\xce\x2a\x13\xb8\x78\x7f\x55\x49\x68\xcd\x0c\xd7\xc9\xcc\xf5\xa8\x71\xcc\x84\xe1\x91\xee\x8b\x67\xd4\x90\xa4\x39\xbc\xf5\x94\xd3\x4d\xb6\xb2\x34\xf5\x1a\xe9\x7c\xda\x6c\xa7\xd5\x27\xf9\xb4\x5a\x26\x21\xb7\xf3\x35\x8d\x9a\x74\xe7\x12\xd4\x4e\xc5\xa9\x16\x92\x21\x9a\x8b\x61\x8a\x1e\xb2\xe1\xd6\xb2\x5b\x37\xe3\x61\x0a\xfb\x42\xe3\x84\x88\x6a\xbe\x38\x10\xc9\xf1\x98\xf5\x5c\x4f\x1a\x04\x1b\xdb\x62\x66\xc9\x38\x5d\x64\x79\x5e\x24\xc5\x14\x95\x71\x44\xee\x30\x51\x72\x0c\x44\x1c\xd4\x0f\x11\x1b\x63\x4a\x17\x51\x4f\xb6\x95\xb0\xe3\x91\x47\x22\x05\x68\x8e\xb9\x91\x1f\x31\x37\xec\x76\x42\x4c\x57\x95\x71\x54\x10\xe8\x72\x9e\x9c\x9f\xbc\x50\x32\xe1\x29\x96\x20\xf4\x5e\xa3\x22\x5f\x2a\xf8\x19\x9e\xff\x94\x1f\xbd\x18\xd1\xb4\x73\x62\xff\xfd\x19\x5e\xfc\x54\x99\x15\xe7\xb2\xec\xa5\x85\x20\xef\xa5\x98\xeb\x49\xca\x66\xd7\xd6\xfe\x50\xa4\x3f\xcf\xe2\x58\xa1\xd6\x55\xa9\x76\x40\xdc\x54\x97\xd5\xc9\xcd\x8d\x57\xf9\xc6\x26\x79\x2a\xa5\xad\xb7\x3a\x8b\x46\xa5\x71\xd4\xb6\x50\xa4\x58\x9f\x22\xab\x7a\xa1\x3e\xf9\x0a\x56\xd0\xc6\x9a\x98\x1f\xbf\xab\x84\x06\x79\x57\x93\x15\x79\x6c\x14\x6b\x5b\x2e\x3e\x6c\xa1\x2f\x74\x28\xba\xa7\xd6\xf5\xde\xcf\xd8\x18\xbb\xf3\x5d\x55\xa7\x1c\x54\x44\xcf\x05\xe6\xc1\xaa\xeb\x2b\x58\x46\x21\x33\x01\x32\x49\x6a\xab\xe1\x4f\x4a\x0a\x46\xda\x0d\xb3\x94\xe5\x6b\x0f\xbd\x22\xaf\xfd\x1c\xb4\x1e\x26\x73\x91\xf1\xce\x46\xd7\x5b\xff\x57\x61\x8e\xed\x05\x0c\x6a\x73\xed\xbe\x06\xf4\xc5\x0f\xa9\x1f\xea\x7f\xff\x54\x9e\x79\x97\x0d\x72\x49\x3a\x1b\x5c\xe7\x7d\xfc\x0c\xff\xfb\x53\xd3\x42\xc4\x55\xb5\x7e\x45\x4c\x84\xec\x69\xc1\xf0\x86\x23\x6a\xa5\x9c\xab\x65\x97\x04\xba\x54\xae\x2c\x21\xd2\x9b\x3b\x9b\xa0\x35\x4b\xc3\xb3\x7e\xa7\x34\xbe\xdf\x71\xc5\x9b\x6b\x5b\x86\xbf\x27\x4d\x09\xe9\xf2\x72\xc4\x85\x5f\x12\xc9\x8b\x6b\x39\xbe\xf0\x01\x15\x41\x96\xcd\xcb\xdc\xe6\x1a\x89\xb3\xc5\x75\x66\x27\x50\x6e\xca\xed\xeb\xea\xc8\x56\xa3\x72\xcd\xc3\xaa\x17\x4e\x5a\x5c\xb9\x27\x30\xf1\x4b\x97\x53\xea\xcc\x95\x7a\x2e\xa2\x34\x8b\x8b\x19\x8b\x55\xcf\x2d\x33\xb9\x09\xb3\x9d\x3d\xdc\x9c\x9e\x7d\x38\x7e\x73\xfa\xea\xfa\xf8\xf2\xb7\xf7\x6f\x4f\xce\xae\x6e\x4a\x3c\x24\x95\x6c\x01\xb3\x70\x3c\x66\x93\x09\x1b\xa4\xc1\x46\x89\xf2\x66\xde\x4d\xa1\x62\x6d\x21\xd8\xaf\xb1\xea\xd9\x78\x20\x53\x1e\x55\x55\x49\xca\xf9\xc4\x51\xa7\xb2\x1e\x5f\xb9\xa1\xf6\x80\xa5\xf8\xa6\xdb\x9c\x2b\xdd\x6f\x20\x2c\x58\x74\x5d\xd3\x7b\x71\x16\xbf\x15\x27\x94\xea\x23\x70\x13\x85\x62\x34\x8c\xa7\x5b\xb8\xad\xd0\x7c\x07\x33\xbc\xc5\xd3\x7c\xcb\xb2\xf1\xbe\x49\xc3\x3d\xe1\x07\x8c\xd6\x50\x4d\xa2\xeb\xc7\xf1\xfc\xc8\x98\xc9\x23\x89\x7e\xc0\xa0\x5a\xad\xb4\x61\x26\x5b\x38\xb0\xfb\x17\x13\x8d\x6f\x88\x7d\x40\x54\x10\xfb\xdc\xc4\x3b\xf3\xbf\xf3\xbb\x55\xef\x34\xbd\xaf\xa4\xf9\x0e\xbf\xc0\xcf\xe6\x3a\x78\x73\xd8\xaa\xb6\x2c\xf5\x6e\xf5\x49\xea\x07\xde\x99\x7d\x74\x47\xd5\x37\x71\xaf\x16\x47\x73\xfb\xe9\x1e\x60\x66\xd3\x3b\x3e\xb6\x6c\x6a\xd3\xeb\xf1\xd7\x33\x74\x5f\x06\x75\xd1\xde\xfc\xe5\xd6\xfa\xbc\x79\xa0\x69\x9b\x94\x04\xbf\x47\x63\x83\x42\x1b\xde\x1b\x5f\xfb\xf2\xcd\x2b\x3c\x5d\xb9\x91\xc6\x53\x54\x7a\xb9\xb6\x0b\xc0\x2e\xe3\xc2\xfc\xf7\xbf\x17\x10\xa3\x60\xef\xf8\x46\xc2\x1b\xf6\x24\x87\xf2\xc3\x5d\xde\x8f\x21\x7f\x8c\x86\x2d\x1c\x8a\x86\x6d\x7b\x1d\x16\xc7\x36\xe6\x59\x7a\xb1\x78\xf3\xde\x92\xd2\xf7\x16\x0d\xfb\x60\x77\xb0\x6c\x90\x28\x6e\x37\xdc\x03\xb2\x65\x67\x80\xb0\x29\x6d\x17\xc9\xb4\x9b\x3d\xad\xe9\xd5\x02\x73\xbf\xaf\xc8\xd1\x0f\x71\xd5\x57\x2a\x10\x76\x79\xf0\x7a\x1d\xf7\xd8\x68\x5a\xd7\x33\x1f\x6a\x9b\xa8\xd6\x76\xcf\x76\xf4\x5c\x73\x5b\xd7\x8a\x06\x5e\x62\x82\x0a\x45\xf4\x60\xcc\x7c\x74\x60\xb9\xd7\x8c\x77\xb5\x8a\xbf\xd3\x21\xbc\xd4\x92\x0a\xea\xed\xb4\x29\x75\xd0\x7d\x72\x8c\x70\x03\xbf\x01\x3e\x5c\x55\x63\x76\x9f\xbc\x9c\x35\xec\xdd\x7f\x0a\x3f\x67\x7a\x39\x58\x7d\x35\xa2\xb0\x5c\xb5\xc7\xe6\x60\xe1\x33\x6b\x5b\x93\x7f\x6f\x0c\xe7\x6f\xfb\x70\x6f\xf8\x78\x30\xd7\x59\x15\x9d\xea\xc4\xa5\x81\x88\x8e\xab\x9b\x81\xef\x11\x37\xbf\x87\xb8\x39\xae\x88\xd8\x5c\x2f\xe1\xe7\x4d\x2f\xbb\xba\xef\x55\x57\xf7\x7b\xf7\x03\xc7\xdb\x26\xa7\xd6\x06\x71\xfe\x85\x7b\x73\xaf\xda\x9b\x7f\xc9\x5e\xe5\xf5\x7a\x1f\x83\xdd\xc4\x4d\xaf\xd4\x2b\x15\x2b\xe6\xc9\x5b\x98\xce\x6f\x52\x7d\xec\x53\x14\x6b\x45\x49\xc9\x2f\x1a\x05\x1a\xb9\x55\x71\x3b\x39\x4d\xf9\x86\xa6\x81\x4f\x59\xe2\xaa\x8f\x35\xed\xf8\xfa\x15\x8f\x46\x4b\xd6\xb0\x9e\x68\x42\x57\x59\x5f\xfa\x0a\xf4\xa6\xa9\x42\xac\x72\xdd\x7c\x21\x78\x02\x32\xf5\x0f\x26\x2b\xdf\x54\xa5\x08\xb3\x6f\x6f\x90\x71\x3b\x80\xb8\x63\x81\xdd\xe2\xe0\xd6\xa3\xdb\x91\xfc\x72\xd2\xba\x05\xba\xbf\x0e\x00\x35\xdd\x85\x7a\x34\xc2\x7f\xaf\x0b\xea\x3f\x56\xfa\x08\x99\xbe\xfa\xfd\xa9\xaf\xeb\x82\xaf\x10\x07\xcd\x37\xae\x9e\xda\x0d\xe5\xc2\xe8\x46\x13\xb3\x77\x57\x97\xa7\x67\xbf\x85\xf3\xb0\xd3\xb3\xab\x93\xdf\x4e\x2e\xc3\x43\xaf\xce\xdf\xff\xf2\xe6\x24\x3c\xf2\xcb\xf9\xf9\x9b\x93\xe3\xb3\x7b\xe7\x6b\x5e\x74\x4d\xdf\x1a\x7d\xdb\x48\xe9\xd3\xb3\xd3\xab\x50\x9b\x97\x97\x27\xc7\x57\x15\xfd\xde\x5f\xbc\xaa\x1d\x79\x75\xf2\xe6\xe4\xea\xe4\x5e\x85\xad\xd8\x83\xdc\xc9\x77\x07\x77\x07\xff\x1f\x00\x00\xff\xff\xbc\x4f\xc0\xc0\xe2\xa7\x00\x00")

func serviceSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_serviceSwaggerJson,
		"service.swagger.json",
	)
}

func serviceSwaggerJson() (*asset, error) {
	bytes, err := serviceSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.swagger.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"service.swagger.json": serviceSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"service.swagger.json": &bintree{serviceSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
